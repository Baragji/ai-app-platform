name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

# Default permissions: read-all for security
permissions: read-all

env:
  NODE_VERSION: 20

jobs:
  install:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --workspaces

      - name: Build gateway package first
        run: npm run build --workspace=packages/gateway

      - name: Cache node_modules
        uses: actions/cache@2cdf405574d6ef1f33a1d12acccd3ae82f47b3f2 # v4.1.0
        with:
          path: |
            node_modules
            apps/*/node_modules
            packages/*/node_modules
            tests/*/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Cache gateway build
        uses: actions/cache@2cdf405574d6ef1f33a1d12acccd3ae82f47b3f2 # v4.1.0
        with:
          path: packages/gateway/dist
          key: ${{ runner.os }}-gateway-dist-${{ hashFiles('packages/gateway/src/**/*', 'packages/gateway/package.json', 'packages/gateway/tsconfig.json') }}

  lint:
    runs-on: ubuntu-latest
    needs: install
    permissions:
      contents: read
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore node_modules cache
        uses: actions/cache@2cdf405574d6ef1f33a1d12acccd3ae82f47b3f2 # v4.1.0
        with:
          path: |
            node_modules
            apps/*/node_modules
            packages/*/node_modules
            tests/*/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Restore gateway build cache
        uses: actions/cache@2cdf405574d6ef1f33a1d12acccd3ae82f47b3f2 # v4.1.0
        with:
          path: packages/gateway/dist
          key: ${{ runner.os }}-gateway-dist-${{ hashFiles('packages/gateway/src/**/*', 'packages/gateway/package.json', 'packages/gateway/tsconfig.json') }}

      - name: Install dependencies (if cache miss)
        run: npm ci --workspaces

      - name: Build gateway (if cache miss)
        run: npm run build --workspace=packages/gateway

      - name: Run ESLint
        run: npm run lint

      - name: Check Prettier formatting
        run: npm run format:check

      - name: Type check
        run: npm run type-check

  build:
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      contents: read
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore node_modules cache
        uses: actions/cache@2cdf405574d6ef1f33a1d12acccd3ae82f47b3f2 # v4.1.0
        with:
          path: |
            node_modules
            apps/*/node_modules
            packages/*/node_modules
            tests/*/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Restore gateway build cache
        uses: actions/cache@2cdf405574d6ef1f33a1d12acccd3ae82f47b3f2 # v4.1.0
        with:
          path: packages/gateway/dist
          key: ${{ runner.os }}-gateway-dist-${{ hashFiles('packages/gateway/src/**/*', 'packages/gateway/package.json', 'packages/gateway/tsconfig.json') }}

      - name: Install dependencies (if cache miss)
        run: npm ci --workspaces

      - name: Build gateway (if cache miss)
        run: npm run build --workspace=packages/gateway

      - name: Generate Prisma client
        run: npm run generate --workspace=packages/db

      - name: Build application
        run: npm run build
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          REDIS_URL: redis://localhost:6379
          NEXTAUTH_SECRET: test-secret
          NEXTAUTH_URL: http://localhost:3000
          # LiteLLM configuration for build
          LITELLM_BASE_URL: http://localhost:4000
          LITELLM_TIMEOUT: 30000

  test:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      actions: read
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore node_modules cache
        uses: actions/cache@2cdf405574d6ef1f33a1d12acccd3ae82f47b3f2 # v4.1.0
        with:
          path: |
            node_modules
            apps/*/node_modules
            packages/*/node_modules
            tests/*/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Restore gateway build cache
        uses: actions/cache@2cdf405574d6ef1f33a1d12acccd3ae82f47b3f2 # v4.1.0
        with:
          path: packages/gateway/dist
          key: ${{ runner.os }}-gateway-dist-${{ hashFiles('packages/gateway/src/**/*', 'packages/gateway/package.json', 'packages/gateway/tsconfig.json') }}

      - name: Install dependencies (if cache miss)
        run: npm ci --workspaces

      - name: Build gateway (if cache miss)
        run: npm run build --workspace=packages/gateway

      - name: Generate Prisma client
        run: npm run generate --workspace=packages/db

      - name: Run unit tests
        run: npm run test --workspace=tests/unit
        env:
          NODE_ENV: test
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          REDIS_URL: redis://localhost:6379
          NEXTAUTH_SECRET: test-secret
          NEXTAUTH_URL: http://localhost:3000
          # LiteLLM test configuration - will use mock gateway automatically
          LITELLM_BASE_URL: http://localhost:4000
          LITELLM_TIMEOUT: 5000

  e2e:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      actions: read
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ai_app_platform
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore node_modules cache
        uses: actions/cache@2cdf405574d6ef1f33a1d12acccd3ae82f47b3f2 # v4.1.0
        with:
          path: |
            node_modules
            apps/*/node_modules
            packages/*/node_modules
            tests/*/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Restore gateway build cache
        uses: actions/cache@2cdf405574d6ef1f33a1d12acccd3ae82f47b3f2 # v4.1.0
        with:
          path: packages/gateway/dist
          key: ${{ runner.os }}-gateway-dist-${{ hashFiles('packages/gateway/src/**/*', 'packages/gateway/package.json', 'packages/gateway/tsconfig.json') }}

      - name: Install dependencies (if cache miss)
        run: npm ci --workspaces

      - name: Build gateway (if cache miss)
        run: npm run build --workspace=packages/gateway

      - name: Generate Prisma client
        run: npm run generate --workspace=packages/db

      - name: Install Playwright browsers with deps
        run: npx playwright install --with-deps
        working-directory: tests/e2e

      - name: Run database migrations
        run: npm run migrate:deploy --workspace=packages/db
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ai_app_platform

      - name: Seed database
        run: npm run seed --workspace=packages/db
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ai_app_platform

      - name: Run Playwright tests
        run: npm run e2e --workspace=tests/e2e
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ai_app_platform
          REDIS_URL: redis://localhost:6379
          NEXTAUTH_SECRET: test-secret
          NEXTAUTH_URL: http://localhost:3000
          # LiteLLM test configuration - will use mock gateway automatically
          LITELLM_BASE_URL: http://localhost:4000
          LITELLM_TIMEOUT: 5000

      - name: Upload Playwright report
        uses: actions/upload-artifact@89ef406dd8d7e03cfd12d9e0a4a378f454709029 # v4.4.0
        if: failure()
        with:
          name: playwright-report
          path: tests/e2e/playwright-report/
          retention-days: 30

      - name: Upload Playwright traces
        uses: actions/upload-artifact@89ef406dd8d7e03cfd12d9e0a4a378f454709029 # v4.4.0
        if: failure()
        with:
          name: playwright-traces
          path: tests/e2e/test-results/
          retention-days: 30

  docker:
    runs-on: ubuntu-latest
    needs: [lint, build, test, e2e]
    permissions:
      contents: read
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1

      - name: Build Docker image
        uses: docker/build-push-action@5cd11c3a4ced054e52742c5fd54dca954e0edd85 # v6.7.0
        with:
          context: .
          push: false
          tags: ai-app-platform:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
