name: CI
on:
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app
        ports: ['5432:5432']
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:7-alpine
        ports: ['6379:6379']
        options: >-
          --health-cmd="redis-cli ping || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/app
      REDIS_URL: redis://localhost:6379
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: testsecret
      NODE_ENV: test
      CI: true

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Generate Prisma Client
        run: npm run generate --workspace=apps/web || npm run generate

      - name: Apply DB migrations
        run: npm run migrate:deploy --workspace=apps/web || npm run migrate:deploy

      - name: Seed DB
        run: npm run seed --workspace=apps/web || npm run seed

      - name: Build (gateway first if present)
        run: |
          npm run build --workspace=packages/gateway || true
          npm run build

      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        working-directory: tests/e2e

      - name: Unit tests
        run: npm run test --workspaces --if-present || npm run test --if-present

      - name: E2E tests (Playwright)
        env:
          BASE_URL: http://localhost:3000
        run: npm run e2e --workspace=tests/e2e

      - name: Generate SBOM (CycloneDX)
        if: always()
        run: npx @cyclonedx/cyclonedx-npm --output-file sbom.json || true

      - name: Upload artifacts (reports, traces, logs, sbom)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            tests/e2e/playwright-report/
            tests/e2e/test-results/
            sbom.json
            **/junit*.xml
            **/logs/**
